---
- name: Add_grafana_repository
  yum_repository:
    name: grafana
    description: grafana
    baseurl: "{{ grafana.repo_base_url }}"
    repo_gpgcheck: yes
    enabled: yes
    gpgcheck: yes
    gpgkey: "{{ grafana.gpg_key_url }}"
    sslverify: yes
    sslcacert: "{{ grafana.sslcacert_path }}"
    state: present
  register: status_repo

- name: Install_Grafana_Package
  yum:
    name: grafana
    state: present

- name: Change_permission_on_Grfana_configuration_directory_and_files
  file:
    path: "{{ grafana.configuration_path }}"
    recurse: yes
    mode: o+rw

- name: Apply_Grafana_config
  template:
    src: grafana.ini.j2
    dest: "{{ grafana.configuration_path }}/grafana.ini"
    mode: o+rw

- name: Provisioning_Datasources
  template:
    src: datasource.yml.j2
    dest: "{{ grafana.provisioning.datasource_path }}/datasource.yml"
    mode: u=rw,g=rw,o=r

- name: Provisioning_Dashboards
  template:
    src: dashboard.yml.j2
    dest: "{{ grafana.provisioning.dashboards_path }}/dashboard.yml"
    mode: u=rw,g=rw,o=r

- name: Create_data_folder_for_dashboards
  file:
    path: "{{ grafana.provisioning.json_file_path }}"
    state: directory
    user: root
    group: grafana
    mode: u=rwx,g=rx,o=rx

- name: Copy_json_files_dashbords
  copy:
    src: "{{ item }}"
    dest: "{{ grafana.provisioning.json_file_path }}"
    owner: root
    user: grafana
    mode: u=rwx,g=rx,o=rx
  loop:
    - alertmanager.json
    - grafana.json
    - node-exporter-full.json
    - prometheus.json
    - victoriametrics.json

- name: Reload_systemd_units
  systemd:
    daemon_reload: yes

- name: Run_and_enable_Grafana
  systemd:
    name: "{{ grafana.app_name }}"
    state: started
    enabled: yes

- name: Enable_grafana_port_on_firewall
  firewalld:
    port: "{{ grafana.port }}/tcp"
    permanent: yes
    state: enabled
    immediate: yes

- name: First_provisioning_admin_users
  block:

    - name: Change_admin_paswword
      uri:
        url: "http://localhost:{{ grafana.port }}/api/admin/users/1/password"
        url_password: "{{ grafana.admin_first_password }}"
        url_username: 'admin'
        force_basic_auth: yes
        method: PUT
        headers:
          Accept: application/json
          Content-Type: application/json
        body_format: json
        body:
          '{"password": "{{ grafana.admin_password }}"}'
      register: status_change_admin_password

    - name: Result_change_admin_password
      debug:
        var: status_change_admin_password

    - name: Create_admin_monitoring_user
      uri:
        url: "http://localhost:{{ grafana.port }}/api/admin/users"
        url_password: "{{ grafana.admin_password }}"
        url_username: 'admin'
        force_basic_auth: yes
        method: POST
        headers:
          Accept: application/json
          Content-Type: application/json
        body_format: json
        body:
          '{"name": "{{ grafana.administrator }}", "email": "{{ grafana.administrator }}", "login": "{{ grafana.administrator }}", "password": "{{ grafana.admin_password }}"}'
      register: status_crate_admin_monitoring_user

    - name: Result_crate_admin_monitoring_user
      debug:
        var: status_crate_admin_monitoring_user

    - name: add_admin_permissions_for_admin_monitoring
      uri:
        url: "http://localhost:{{ grafana.port }}/api/admin/users/2/permissions"
        url_password: "{{ grafana.admin_password }}"
        url_username: 'admin'
        force_basic_auth: yes
        method: PUT
        headers:
          Accept: application/json
          Content-Type: application/json
        body_format: json
        body:
          '{"isGrafanaAdmin": true}'
      register: status_add_admin_permissions

    - name: Result_add_admin_permissions
      debug:
        var: status_add_admin_permissions

    - name: Add_admin_permissions_for_admin_monitoring_on_org
      uri:
        url: "http://localhost:{{ grafana.port }}/api/org/users/2"
        url_password: "{{ grafana.admin_password }}"
        url_username: 'admin'
        force_basic_auth: yes
        method: PATCH
        headers:
          Accept: application/json
          Content-Type: application/json
        body_format: json
        body:
          '{"role": "Admin"}'
      register: status_add_admin_role_on_org

    - name: Result_add_admin_role_on_org
      debug:
        var: status_add_admin_role_on_org

  when: status_repo is changed

- name: Check_Grafana_Status
  uri:
    url: "http://localhost:{{ grafana.port }}/api/health"
    return_content: yes
  register: result_grafana_status

- name: Result_checking_Grafana_Status
  debug:
    var: result_grafana_status
