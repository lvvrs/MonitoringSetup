---
- name: Get_prometheus_distrib
  get_url:
    url: "{{ prometheus_arch.url }}{{ prometheus_arch.distrib }}"
    dest: "{{ path.tmp }}"
    owner: "{{ user.owner }}"
    group: "{{ user.group }}"
    mode: '0770'
    checksum: "{{ prometheus_arch.checksum }}"

- name: Create_service_user_for_prometheus
  user:
    name: "{{ prometheus.service.user }}"
    shell: "{{ prometheus.service.shell }}"
    create_home: no

- name: Create_group_prometheus-sys
  group:
    name: "{{ prometheus.sys_group }}"
    state: present

- name: Add_users_vagrant and_prometheus_in_group_prometheus-sys
  user:
    name: "{{ item }}"
    groups: "{{ prometheus.sys_group}}"
    append: yes
  with_items:
    - "{{ user.owner }}"
    - "{{ prometheus.service.user }}"

- name: Create_prometheus_app_dir
  file:
    path: "{{ prometheus.app_dir }}"
    state: directory
    owner: "{{ user.owner }}"
    group: "{{ prometheus.sys_group }}"
    mode: '775'

- name: UnArchiv_prometheus_distrib
  unarchive:
    src: "{{ path.tmp }}/{{ prometheus_arch.distrib }}"
    dest: "{{ prometheus.app_dir }}"
    remote_src: yes
    extra_opts:
      - --strip-components=1

- name: Create_DB_directory
  file:
    path: "{{ prometheus.db_dir }}"
    owner: "{{ prometheus.service.user }}"
    group: "{{ prometheus.sys_group }}"
    recurse: yes

- name: Create_lib_dir
  file:
    path: "{{ prometheus.lib_dir }}"
    state: directory

- name: Create_conf_and_exec_dir
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ user.owner }}"
    group: "{{ prometheus.sys_group }}"
    mode: '775'
  with_items:
    - "{{ prometheus.conf_dir }}"
    - "{{ prometheus.exec_dir }}"

- name: Copy_files_prometheus_to_lib_catalog
  copy:
    src: "{{ prometheus.app_dir }}/console_libraries"
    dest: "{{ prometheus.lib_dir }}/"
    remote_src: yes

- name: Copy_files_prometheus_to_conf_catalog
  copy:
    src: "{{ prometheus.app_dir }}/{{ item }}"
    dest: "{{ prometheus.conf_dir }}"
    remote_src: yes
    owner: "{{ user.owner }}"
    group: "{{ prometheus.sys_group }}"
    mode: '775'
  with_items:
    - consoles
    - LICENSE
    - NOTICE
    - prometheus.yml

- name: Copy_files_prometheus_to_exec_dir
  copy:
    src: "{{ prometheus.app_dir }}/{{ item }}"
    dest: "{{ prometheus.exec_dir }}"
    remote_src: yes
    owner: "{{ user.owner }}"
    group: "{{ prometheus.sys_group }}"
    mode: '775'
  with_items:
    - prometheus
    - promtool
    - tsdb

- name: Copy_SystemD_unit_file_promethus
  template:
    src: promethus.service.j2
    dest: "{{ prometheus.unit_dir }}/prometheus.service"
    owner: 'root'
    group: 'root'
    mode: '644'

- name: Copy_EnvironmentFile_promethus
  template:
    src: prometheus-options.j2
    dest: "{{ prometheus.conf_dir }}/prometheus-options"
    owner: "{{ user.owner }}"
    group: "{{ prometheus.sys_group }}"
    mode: '664'

- name: Reload_systemd_units
  systemd:
    daemon_reload: yes

- name: Change_permissions_on_prometheus_etc_files
  file:
    path: "{{ prometheus.conf_dir }}/{{ item }}"
    state: touch
    mode: '666'
  with_items:
    - LICENSE
    - NOTICE
    - prometheus.yml
    - consoles/index.html.example
    - consoles/node-cpu.html
    - consoles/node-disk.html
    - consoles/node.html
    - consoles/node-overview.html
    - consoles/prometheus.html
    - consoles/prometheus-overview.html

- name: Change_permissions_on_data_prometheus_dir
  file:
    path: "{{ path.data }}"
    state: touch
    owner: "{{ user.owner }}"
    group: "{{ prometheus.sys_group }}"
    mode: '775'

- name: Apply_prometheus_config
  template:
    src: prometheus.yml.j2
    dest: "{{ prometheus.conf_dir }}/prometheus.yml"
    owner: "{{ user.owner }}"
    group: "{{ prometheus.sys_group }}"
    mode: '664'
    validate: "{{ prometheus.exec_dir }}/promtool check config {{ prometheus.conf_dir }}/prometheus.yml %s"

- name: Add_prometheus_auto_reload_file
  copy:
    src: prometheus_auto_reload
    dest: "{{ prometheus.exec_dir }}/prometheus_auto_reload"
    owner: "{{ user.owner }}"
    group: "{{ prometheus.sys_group }}"
    mode: '775'

- name: Create_crontap_auto_reload_promethues_configuration
  cron:
    name: "reload_prometheus"
    minute: '*/10'
    job: "{{ prometheus.exec_dir }}/prometheus_auto_reload"
    user: "{{ user.owner }}"

- name: Strat_and_Enable_Prometheus
  systemd:
    name: "{{ prometheus.app_name }}"
    state: started
    enabled: yes

- name: Enable_9090_port_on_firewall
  firewalld:
    port: "{{ prometheus.port }}/tcp"
    permanent: yes
    state: enabled
    immediate: yes

- name: Check_Promethues
  uri:
    url: http://localhost:9090/-/ready
  register: result_prometheus

- name: Result_checking_prometheus
  debug:
    var: result_prometheus

- name: Delete_tmp_file_archive
  file:
    path: "{{ path.tmp }}/{{ prometheus_arch.distrib }}"
    state: absent

- name: Delete_prometheus_app_dir
  file:
    path: "{{ prometheus.app_dir }}"
    state: absent



