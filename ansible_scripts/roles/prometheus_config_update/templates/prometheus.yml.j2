# my global config
global:
  scrape_interval:     15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
  evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.
  # scrape_timeout is set to the global default (10s).

# Alertmanager configuration
alerting:
  alertmanagers:
  - static_configs:
    - targets:
      - {{ targets.mon }}:{{ alertmanager.port }}

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
  - "alerts_rules.yml"

remote_write:
  - url: http://{{ targets.sto }}:{{ targets.vm_port }}/api/v1/write

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  - job_name: 'prometheus'

    # metrics_path defaults to '/metrics'
    # scheme defaults to 'http'.

    static_configs:
    - targets:
      - {{ targets.mon }}:{{ prometheus.port }}

  - job_name: 'node_exporter'
    metrics_path: /metrics
    static_configs:
      - targets:
        - {{ targets.mon }}:{{ targets.port }}
        - {{ targets.cli }}:{{ targets.port }}
        - {{ targets.sto }}:{{ targets.port }}
        - new-host.test.local:9100
        - new-host2.test.local:9100

  - job_name: 'alertmanager_metrics'
    metrics_path: /metrics
    static_configs:
      - targets:
        - {{ targets.mon }}:{{ alertmanager.port }}

  - job_name: 'victoriametrics_server'
    metrics_path: /metrics
    static_configs:
      - targets:
        - {{ targets.sto }}:{{ targets.vm_port }}

  - job_name: 'grafana_metrics'
    scrape_interval: 15s
    scrape_timeout: 5s
    static_configs:
      - targets:
        - {{ targets.mon }}:{{ grafana.port }}
